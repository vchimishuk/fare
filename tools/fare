#!/bin/sh

# fare files sharing console client.
#
# Copyright (C) 2019 Viacheslav Chimishuk <vchimishuk@yandex.ru>
#
# Home page: https://github.com/vchimishuk/fare
# See fare --help for documentation.

set -e

usage() {
    echo "Usage: fare [-c] [-C tool] [-S server] [FILE]"
    echo "       fare [-c] [-C tool] [-S server] [-t tool] -s [FILE]"
    echo "       fare -h"
    echo
    echo "  -c, --clipboard     copy result URL to clipbard instead writing it to stdout"
    echo "  -C, --clip-tool     specify tool to store into clipboard"
    echo "  -h, --help          display this help and exit"
    echo "  -s, --shot          take and upload screenshot"
    echo "  -S, --server URL    specify server URL to use"
    echo "  -t, --shot-tool     specify tool to take screenshot with"
    echo
    echo "Environment variables"
    echo "  \$FARE_CLIP_TOOL    tool to use to store into clipboard"
    echo "  \$FARE_CURL         alternative path to curl command"
    echo "  \$FARE_SERVER       remote server URL to upload data to"
    echo "  \$FARE_SHOT_TOOL    tool to use to take screenshot"
}

halt() {
    echo "fare: $1"
    echo "Try fare --help for more information."
    exit 1
}

upload() {
    curl=$1
    file=$2
    server=$3
    mime=$(file -b --mime-type "$file")
    name=$(basename "$file")
    $curl -s -H "Content-Type: $mime" -H "X-Filename: $name" \
          --data-binary "@$file" "$server"
    echo
}

tmp_dir=$(mktemp -d -t fare-XXXXXX)
trap "rm -rf $tmp_dir" EXIT

curl=$FARE_CURL
clipboard=
clip_tool=$FARE_CLIP_TOOL
show_usage=
shot=
shot_tool=$FARE_SHOT_TOOL
file=
server=$FARE_SERVER

while [ -n "$1" ]
do
    case "$1" in
        -c|--clipboard)
            clipboard=y
            shift
            ;;
        -h|--help)
            show_usage=y
            shift
            ;;
        -s|--shot)
            shot=y
            shift
            ;;
        -S|--server)
            shift
            server=$1
            shift
            ;;
        -t|--shot-tool)
            shift
            shot_tool=$1
            shift
            ;;
        -*)
            halt "invalid option $1"
            ;;
        *)
            if [ -n "$file" ]
            then
                halt "only one positional argument allowed"
            fi
            file=$1
            shift
            ;;
    esac
done

if [ -n "$show_usage" ]
then
    usage
    exit 0
fi

if [ -z "$server" ]
then
    halt "server address is not specified. -S option or \$FARE_SERVER environment variable required."
fi

if [ -z "$curl" ]
then
    curl=curl
fi

if [ -z "$clip_tool" ]
then
    clip_tool=xclip
fi


if [ -n "$shot" ]
then
    if [ -z "$shot_tool" ]
    then
        halt "screenshot capturing tool is not specified. -t option or \$FARE_SHOT_TOOL environment variable required."
        echo "Try fare --help for more information."
        exit 1
    fi

    if [ -z "$file" ]
    then
        file="$tmp_dir/fare.png"
    fi
    $shot_tool "$file" > /dev/null
else
    if [ -t 0 ]
    then
        if [ -z "$file" ]
        then
            halt "missing FILE argument"
        fi
    else
        file="$tmp_dir/data"
        cat > "$file"
    fi
fi

url=$(upload "$curl" "$file" "$server")

if [ -z "$clipboard" ]
then
    echo $url
else
    echo -n "$url" | $clip_tool
fi
